# Dummy test Jenkinsfile to Github Actions, based on demo file
name: Jtop Pipeline
run-name: ${{ github.actor }} is running jtop pipeline
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - run: echo 'Checking out code...'
      - name: Check out repository code
        uses: actions/checkout@v1

      - run: echo 'Running jtop Pipeline...'
      - name: Update apt cache
        run: |
          sudo apt-get update
      - name: Install cmake
        run: |
          sudo apt-get -y install cmake gcc
      - name: Create build dir
        run: |
          cmake -B ci-build
      - name: Build the code
        working-directory: ./ci-build
        run: |
          make
      - name: List files in the build dir
        run: |
          ls ${{ github.workspace }}/ci-build

      - name: Archive jtop binary
        uses: actions/upload-artifact@v3
        with:
          name: jtop x86_64 binary
          path: ci-build/jtop
                    
      - run: echo "This job's status is ${{ job.status }}."

  make-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    #container:
    #  image: moby/buildkit:v0.10.6
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      #- name: Build Jtop Docker Image
      #  run: |
      #    buildctl build \
      #      --frontend dockerfile.v0 \
      #      --local context=. \
      #      --local dockerfile=. \
      #      --output type=image,name=${IMAGE_NAME},push=true

      - name: Build and push
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:v0.10.6
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

